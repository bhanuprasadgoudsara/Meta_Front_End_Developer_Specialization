Introduction to Internet Protocols:
Internet Protocol: makes possible to packets of information to be delivred or received
There are 2 standards of Protocol:
- IP Version 4: IP address contains 4 octets seperated by periods or dots. Ex: 192.0.2.235
- IP Version 6: IP address contains 8 groups of hexadecimal digits separated by a colon. Ex: 4527:0a00:1567:0200:ff00:0042:8239
Every computer in a network is assigned an IP address.
IP packets or Datagrams: Data sent as series of messages 

A IP Packet contains:
- a header
  - Destination IP address
  - Source IP address
- a payload or the data with some other protocols

While transmitting data in data packets
  - may arrive out of order
  - may become damaged or corrupted
  - may dropped or lost

To solve above problems, the Pay load contains other Protocols:
it can be assumed as a other message inside the Payload.
1. TCP - Transmission Control Protocol
2. UDP - User Datagram Protocol

TCP can solve all 3 problems, but at the cost of small delay while sending data.
TCP is used for sending the data that must arrive correctly and in order such as Text or Image file.

UDP only solves only corrupt packge issue, but packets can still arrive out of order or not arrive at all.
UDP is used for sending the data that can't tolerate some data loss such as voice calls or Live video straming.

TCP is used for data that must arrive correctly and in order. This is because TCP can deal with data packets arriving out of order, becoming damaged or corrupted, or dropped or lost albeit at the cost of a small delay.

Other Internet Protocols:
1. Dynamic Host Configuration Protocol (DHCP): 
Used to assign your computer an IP address and keeps track of computers on the network and their IP addresses.

2. Dynamic Name System Protocol (DNS):
Your computer needs a way to know with which IP address to communicate when you visit a website in your web browser, for example, meta.com. Your computer then checks with the DNS server associated with the domain name and then returns the correct IP address.

3. Internet Message Access Protocol (IMAP):
This provides a way to download emails and manage your mailbox on the server storing your emails. 

4. Simple Mail transfer Protocol (SMTP):
It allows email clients to submit emails (that are already on your device) for sending via an SMTP server. You can also use SMTP to receive emails from an email client, but IMAP is more commonly used.

5. Post Office Protocol (POP):
POP used to download emails to an email client. The main difference in using POP instead of IMAP is that POP will delete the emails on the server once they have been downloaded to your local device. Although it is no longer commonly used in email clients, developers often use it to implement email automation as it is a more straightforward protocol than IMAP.

6. File Transfer Protocol (FTP):
FTP used to transfer the files from your local computer to the server where our websites and web applications on the Internet are running. FTP allows you to list, send, receive and delete files on a server. Your server must run an FTP Server and you will need an FTP Client on your local machine. The data is transmitted insecurely when using the File Transfer Protocol. It means that third parties may understand the data that you are sending. This is not right if you transmit company files such as software and databases. 

7. Secure Shell protocol (SSH):
SSh used to log in and interact with the computer remotely. Using an SSH client allows you to connect to an SSH server running on a server to perform commands on the remote computer. All data sent over SSH is encrypted. This means that third parties cannot understand the data transmitted. Only the sending and receiving computers can understand the data.

8. SSH File Transfer Protocol or Secure File transfer Protocol(SFTP): 
SFTP can be used to transfer files over the SSH protocol. It ensures that the data is transmitted securely. Most FTP clients also support the SFTP protocol.

Introduction to HTTP:
HTTP is the Core Oerational Protocol of World Wide Web.
HTTP enables your web browser to communicate with a web server that hosts a website.
HTTP is the communication protocol that we use whenever we browse the web.
HTTP - HyperText Transfer Protocol
HTTP is used for tranferring webresources such as HTML documents, images, styles and other files.
HTTP is a requet-response based protocol.
A web browser or  client sends an HTTP request to a server and the web server sends the HTTP response back to the browser.

Make-up of HTTP Request:
- method
- path
- version and
- headers

GET (method)/ HTTP (path)/ 1.1(version)
Host: developer.mozilla.org (header)
Accept-Language: en (header)

HTTP method: describes the type of action that the client must be perform.
Most commonly used HTTP methods are:
1. GET: retrieve info or resource from the server
2. POST: send data or resource to the server
3. PUT: updates or replaces a resource in the server
4. DELETE: removes or deletes a resource in the server
5. PATCH: partially updates a resource in the server

For certain request methods, the request will also contain a body of content that the client is sending.

HTTP Path: represetation of where the resource is stored on the web server.
example: https://example.com/images/image.jpg

HTTP verions: There are multiple versions of HTTP protocol. Most used versions are 1.1 and 2.0.

HTTP Headers: contains additional information about the request and the client that is making the request.

Make-up of HTTP Response:
HTTP response format is similar to the HTTP request format.
Following the header, the response will optionally contain a MESSAGE BODY consisting of the response contents such as HTML document, the image file and so on.

HTTP Status Code contained within Header indicate if the HTTP request is succesfully completed.
Code values are in the range of 100-599 and are grouped by purpose.
The STATUS MESSAGE is a text representation of the status code.

There are 5 groups of status codes:
1. Informational responses   : 100 - 199
2. Successful responses      : 200 - 299
3. Redirection responses     : 300 - 399
4. Client Error responses    : 400 - 499
5. Server Error responses    : 500 - 599

Informational Responses: (100 - 199)
provisional rsponses sent by server (interim before actual response)
Ex: 100 CONTINUE - continue the request or ignore the response if the request is already finished.

Successful responses: (200 - 299)
Request successfully processed by web server. We receive this respone everyday when we receive the content succssfully from a website
Ex: 200 OK
200 OK meaning depnd on HTTP method:
GET: the resource is found and it is included in the body of the response
POST: the resource is succssully transmitted to the web server
PUT: the resource is succssully transmitted to the web server
DELETE: the resource is deleted 

201 Created - a resource was created.
202 Accepted - accepted but processing has not completed.
204 No Content - not returning any content.

Redirection responses: (300 - 399)
Indicates to the web client that the requested resource has been moved to a different path.
Ex: 
301 MOVED PERMANENTLY :
302 FOUND             : temporary redirection, the resource is temporarily moved.
When web browsers receive these responses, they will automatically submit the request for the resource at the new path.

Client Error responses: (400 - 499)
Indicate the request contained bad syntax or content and can not be processed by the web server.
Ex:
400 Bad Request : web browser or client submitted bad data to the server.
401 Unauthorized : user must log in to an account before the request can be processed
403 Forbidden : request is valid, but the web server is refusing to process it. user does not sufficient permissions to execute an action in a web application.
404 Not Found : requested resource was not found on the web server.

Server Error responses: (500 - 599)
indicate the failure occurred on the web server, while trying to process the request.
Ex: 
500 Internal Server Error: Generic Server Error: indicates Server failed to process the request.
502 Bad Gateway: invalid response from the Application Server.
503 Service Unavailable: web server cannot process the request.

HTTPS: SECURE version of HTTP. used to secure the communication between two computers so that no body else can see the information being sent and recived. It does this by using encryption. The HTTP & HTTPS behave the same way and have the same content. The big difference is that before the content is sent, it is turned into a secret code. Only the other computers can turn the secret code back into original content. We use HTTPS everyday. Lock Icon beside the URL in web browser.

Introduction to HTML, CSS and JavaScript:
For a webpage, we need 3 files and need to be linked together for a complete function.   
- an HTML file (clock.html)
- a CSS file (style.css)
- a JavaScript file (clock.js)

Webpages, Websites and Web Apps:
Webpage: A single page that consists of HTML, CSS, and JavaScript. It displays images, text, videos and other content in the webbrowser.
Website: A collection of webpages that linked together under one domain name.
HyperLink: The link we click on webbrowser as they link HyperText content.
Website and Web application are used interchangably. Website is informative and a web application is more interactive.
Compared to website, Web Application provides:
- A high level of Interactivity
- Dynamically updated content
- Personalized content
Quiz:
1. When sending a message to another computer, the source and destination are specified using an IP ADDRESS
2. Which of the following are valid IP addresses? Select all that apply.
- 192.0.2.235 - correct
- example.com
- 4527:0db8:0a00:1567:0200:ff00:0042:8329 - correct
3. When using TCP, data can arrive out of order. - TRUE
Ans: Data sent via TCP can arrive out of order, but the protocol ensures it's reordered correctly before delivery to the application.
4. Which of the following are valid HTTP methods?
- GET - correct
- POST - correct
- SEND
- DELETE - correct
5. HTML describes the structure and content of a web page. - TRUE
6. When you type a website address (for example, coursera.org) in your web browser, which protocol is used to find the IP address of the website?
- Internet Message Access Protocol (IMAP)
- File Transfer Protocol (FTP)
- Domain Name System Protocol (DNS) - correct
7. A web application is more INTERACTIVE compared to a website.

Browser Developer Tools: allows developers to 
- inspect their HTML, CSS and JavaScript Code, 
- also to trace http request in the webserver, 
- invetigate performance issues and
- review webpage security.
When a FrontEnd is not working as expected, you can check developer tools to know what is going wrong.
To open developer tools --> 
- In chrome, press F12 in Windows or CMD+Option J in MAC.
- right click on webpage --> Inspect
Various rows in top row of developer tools that provide differernt fuctionality.
Most used Tools:
Console Tab: outputs JavaScript Logs and errors from web application.
Source Tab: shows all the content resolved for the current page. it includes HTML, CSS and JavaScript, images and videos.
Network Tab: used for inspecting timeline details of http request and responses for the webpage.
Performance Tab: shows what the webbrowser is doing over time. it is useful when your webapplication is running slow because you can pinpoint the function that is taking the most time.
Memory Tab: displays parts of our code that are consuming the most resources.
Elements Tab: Used to inpect the documents, HTML elements and their properties. When we hover over the elements in elements tab, it highlights that element in the browser pane. One the right side of the panel, there are tabs for inspecting the details of the elements further. This panel shows us what CSS is applied to an element and the result of the element displayed in the browser. When you click on an HTML element, then the information for that element will appear in the tab.
If you double click the HTML element, you can edit it in the webbrowser. But this does not change the content on web server. It only updates it for me while the webpage is open. If we open the webpage again or refresh the webpage, it will reset.
The Web browser developer tools are a valuable part of your development toolkit to help you investigate and diagnose problems.

Frameworks and Libraries:
Used to Save Time and build fast. Built problem have already been solved, many key development processes and they contained in frameworks and libraries that are used everyday in software and application devlopment. These might be open-source (available to everyone to modify and build from). They might be propritery, once that are licensed or developed internally.
Libraries are reusable pieces of code to save time. they are purpose built to provide a spcific functionality.
Frameworks provide a structure for developers to build with. Frameworks acts a struture where the developer provides their own code that framework interacts with.
Examples:
- Express
- Django
- ASP.NET
- Rails
- Spring
Frameworks handle functionality that is common to all webapplications such as receiving HTTP requests and sending HTTP responses. And then developer adds their own code that implments the functionality of the web application.
Most Frameworks use many libraries, the libraries that framework uses can be used for your application, if you wish, you can use other libraries.
Frameworks are considerd opinionated and libraries are considered unopinionated.
The opinionatedness will vary between frameworks. but by defintion, it will always be opinionated than a library. 
Frameworks define the libraries, flow and control of the application. Wheras with libraries, those are ft to the developers to decide.
Framework contains Library
Framework call your application
Your application calls library
Advantages of Frameworks:
- Timesaving, reduce development time
- enforce a STRUCTURE on how code is written
- have many best practices already in place and contain most of what is needed.
Disadvantages of Frameworks:
1. Structure Contraints:
- Sometimes you may find that the way you need to code something doesn't fit into the structure of the framework. 
2. Compatability:
- Other times you may find that some of the libraries the framework uses may conflict with a library that you are required to use and cause compatibility issues. 

Advantages of Libraries:
- They can be replaced as needed, if a new updated and better liraries released. and it is much easier than replacing the framework.

Disadvantages of Libraries:
1. Selecting Library Set:
- If an application is built without a framework, the developer will need to decide on the set of libraries they wish to use to achieve the functionality they must deliver. 
2. Compatability:
- Other times you may find that some of the libraries the framework uses may conflict with a library that you are required to use and cause compatibility issues. 

Frameworks and Libraries:
- to reuse existing web app functions. 
- This can result in faster development, fewer errors, and more time for you to spend on the essential features of your application. 
- Instead of reinventing the wheel, you can use frameworks and libraries that are designed specifically to help your web app development processes.

APIs and Services:
As a web developer, APIs are developer friendly, easily accessible and a very valuable and useful development tool.
API: Application Programming Interface.
An API is a service, application or interface offering advanced functionality with simple syntax.
An API is a set of fucntions and procedures for creating applications that access the fetures or data of an operating system, application or other service.
As a webdeveloper, a lot of day to day job involves workigng with APIs.
Some of the common APIs that web developers work with includes:
- Browser API or Web API
- REST API
- Sensor based API
In software development, APIs bridge between different components or systems. This earns the name like gateway or middleware.
APIs are also known as gateways or middleware because they act as a bridge between systems.
Examples of API use cases:

Browser API or Web API:
- bulit into web browsers
- They extend the functionality of the browser by adding new services and 
- are designed to simplify complex functions and 
- provide easy syntax for building advanced features.
Ex: 
  1. DOM API: turns the html document into a tree of nodes that are represented as JavaScript objects. 
  2. Geolocation API: returns coordinates of where the browser is located.
  3. Fetch API: for fetching data
  4. Canvas API: for graphics
  5. History API: for keeping history
  6. Web Storage API: for client side storage 

RESTful API or REST API: (REpresentational State Transfer)
REST is a set of principles that help build highly efficient API's. This kind of API provides data for popular web and mobile apps. These are also called 'web servers'. One of the main responsibilities of these kinds of API's is sending and receiving data to and from a centralized database. We can query our own REST API or third party ones. Browser <==> REST API <==> Database

Sensor-Based API: 
This is what IOT is based on.These are actual physical senses that are interconnected with each other. The sensors can communicate through API and track and respond to physical data. Ex: Philips Hue smart lights and node bots.

Fortunately, for web developers the most common data API is a RESTtful API which as you've learned is a web server that provides responses to requests. These API web servers are designed to provide the data backbone for a web client like a web page or mobile app. This means that these API's must be able to accomplish things like getting data(GET), creating data(POST), updating data(PUT) and deleting data(DELETE). API issues, REST principles and good design practices to create discoverable interfaces. This helps us get the exact response expected.  

How APIs exactly work ?
These API's use ENDPOINTS to specify how different resources can be accessed. The endpoint is built into the URL when accessing the API. For example, In "http://example.com/?t=info",  the term or extension "t=info" is called ENDPOINT. Once the endpoint is hit, the API performs whatever service side processing is needed to build the response. 

Two common forms of response are, 
- full web pages and 
- data form based on JavaScript called 'JSON'. 

Integrated Development Environment (IDE):
IDE is software for building applications. An IDE is just like a text editor except instead of writing documents you are writing code. There are many IDEs available, some are specific to one programming language, while others support many languages in one IDE.
some common IDE features:
- SYNTAX HIGHLIGHTING: special keywords of the programming language are highlighted in different colors so that the developer can quickly differentiate these keywords from other texts
- ERROR HIGHLIGHTING: Just like checking spelling in a text document, IDEs can highlight mistakes you make in your programming code. 
- AUTO-COMPLETE: Since programming languages have special keywords, IDEs can offer suggestions to autocomplete words as you start typing them. 
- INTLLISENSE: make IEDs very smart and even able to understand your code. They can detect variables and functions and offer them as suggestions during autocomplete.
- REFACTORING: changing the structure of the code without changing the functionality. Since IDEs understand your code, they can help you if you need to change it. Doing this manually is very time consuming and prone to error. If you mistyped the new function name in one place, the application will break. Since the IDE understand your code, it can assist with refactoring and automatically update the function name across all files. 
Select a function -> Rename Symbol -> updates all references of that function name.
IDEs come with a lot of other features to help investigate bugs and collaborate with other developers. Many even allow you to extend their functionality using plugins and extensions.

Quiz:
1. Which of the following can be done using the developer tools in your browser? 
- Inspect the HTML elements of a web page. - Correct
- Check JavaScript error logs. - Correct
- Inspect a timeline of HTTP requests and responses. - Correct
- Upload images to the web server
- Inspect the performance and memory usage of a webpage. - Correct

2. In software development, a library provides _________________________.
- Reusable pieces of code that can be used by your application. - Correct
- A structure for developers to build an application with.

3. In software development, an API is _________________________.
- a set of functions that an application component or service can provide. - Correct
- a text editor to write code with. 

4.Which of the following are benefits of using an Integrated Development Environment (IDE) such as Visual Studio Code? Select all that apply.
- Syntax Highlighting - Correct
- Error Highlighting - Correct
- Autocomplete - Correct
- Autodelete
- IntelliSense - Correct

Summary:
How the web works:
- webpages
  - websites and webpages
  - HTML and CSS
  - JavaScript
- webservers
  - Data Center
  - Wbserver hardware and software
  - HTTP requests
- webbrowsers
  - Browser/Server Interaction
  - Request-Response cycle
Core internet technologies
  - IP address and data transfer
  - HTTP
  - HTML, CSS, JavaScript interaction
  - webpage, website and webapp
  - Frontend and backend
  - Browser devloper tools
- Libraries and Frameworks
- API and its use in webdevlopment
- Purpose and benefits of IDE

Quiz:
1. When two computers connect directly to each other, this forms  ______________.
- the Internet
- a Network - Correct
- a Server

2. The programs that run on a computer are called the ______________.
- Hardware
- Software - Correct

3. The structure of a web page is defined using ______________.
- HTML - Correct
- CSS
- JavaScript

4. The style of a web page is defined using ______________.
- HTML
- CSS - Correct
- JavaScript

5. Computers communicate with each other using which protocol?
- Network Protocol
- Mail Protocol
- Mobile Protocol
- Internet Protocol - Correct

6. To communicate with another computer on a network, your computer sends a message called an __________________.
- IP Packet - Correct
- IP Mail
- IP Container

7. The web browser and web server use which protocol to transfer data?
- DNS
- SMTP
- HTTP - Correct
- IMAP

8. In software development, a framework provides a structure for developers to build an application.
- True - Correct
- False

9. As a developer, it is best to use a _____________ to write and maintain code.
- Word Processor
- Integrated Development Environment - Correct
- Web Browser
- Development Book

10. In software development, an API is a set of functions that an application component or service can provide.
- True  - Correct
- False
