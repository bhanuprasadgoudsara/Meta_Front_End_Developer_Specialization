Introduction to Internet Protocols:
Internet Protocol: makes possible to packets of information to be delivred or received
There are 2 standards of Protocol:
- IP Version 4: IP address contains 4 octets seperated by periods or dots. Ex: 192.0.2.235
- IP Version 6: IP address contains 8 groups of hexadecimal digits separated by a colon. Ex: 4527:0a00:1567:0200:ff00:0042:8239
Every computer in a network is assigned an IP address.
IP packets or Datagrams: Data sent as series of messages 

A IP Packet contains:
- a header
  - Destination IP address
  - Source IP address
- a payload or the data with some other protocols

While transmitting data in data packets
  - may arrive out of order
  - may become damaged or corrupted
  - may dropped or lost

To solve above problems, the Pay load contains other Protocols:
it can be assumed as a other message inside the Payload.
1. TCP - Transmission Control Protocol
2. UDP - User Datagram Protocol

TCP can solve all 3 problems, but at the cost of small delay while sending data.
TCP is used for sending the data that must arrive correctly and in order such as Text or Image file.

UDP only solves only corrupt packge issue, but packets can still arrive out of order or not arrive at all.
UDP is used for sending the data that can't tolerate some data loss such as voice calls or Live video straming.

TCP is used for data that must arrive correctly and in order. This is because TCP can deal with data packets arriving out of order, becoming damaged or corrupted, or dropped or lost albeit at the cost of a small delay.

Other Internet Protocols:
1. Dynamic Host Configuration Protocol (DHCP): 
Used to assign your computer an IP address and keeps track of computers on the network and their IP addresses.

2. Dynamic Name System Protocol (DNS):
Your computer needs a way to know with which IP address to communicate when you visit a website in your web browser, for example, meta.com. Your computer then checks with the DNS server associated with the domain name and then returns the correct IP address.

3. Internet Message Access Protocol (IMAP):
This provides a way to download emails and manage your mailbox on the server storing your emails. 

4. Simple Mail transfer Protocol (SMTP):
It allows email clients to submit emails (that are already on your device) for sending via an SMTP server. You can also use SMTP to receive emails from an email client, but IMAP is more commonly used.

5. Post Office Protocol (POP):
POP used to download emails to an email client. The main difference in using POP instead of IMAP is that POP will delete the emails on the server once they have been downloaded to your local device. Although it is no longer commonly used in email clients, developers often use it to implement email automation as it is a more straightforward protocol than IMAP.

6. File Transfer Protocol (FTP):
FTP used to transfer the files from your local computer to the server where our websites and web applications on the Internet are running. FTP allows you to list, send, receive and delete files on a server. Your server must run an FTP Server and you will need an FTP Client on your local machine. The data is transmitted insecurely when using the File Transfer Protocol. It means that third parties may understand the data that you are sending. This is not right if you transmit company files such as software and databases. 

7. Secure Shell protocol (SSH):
SSh used to log in and interact with the computer remotely. Using an SSH client allows you to connect to an SSH server running on a server to perform commands on the remote computer. All data sent over SSH is encrypted. This means that third parties cannot understand the data transmitted. Only the sending and receiving computers can understand the data.

8. SSH File Transfer Protocol or Secure File transfer Protocol(SFTP): 
SFTP can be used to transfer files over the SSH protocol. It ensures that the data is transmitted securely. Most FTP clients also support the SFTP protocol.

Introduction to HTTP:
HTTP is the Core Oerational Protocol of World Wide Web.
HTTP enables your web browser to communicate with a web server that hosts a website.
HTTP is the communication protocol that we use whenever we browse the web.
HTTP - HyperText Transfer Protocol
HTTP is used for tranferring webresources such as HTML documents, images, styles and other files.
HTTP is a requet-response based protocol.
A web browser or  client sends an HTTP request to a server and the web server sends the HTTP response back to the browser.

Make-up of HTTP Request:
- method
- path
- version and
- headers

GET (method)/ HTTP (path)/ 1.1(version)
Host: developer.mozilla.org (header)
Accept-Language: en (header)

HTTP method: describes the type of action that the client must be perform.
Most commonly used HTTP methods are:
1. GET: retrieve info or resource from the server
2. POST: send data or resource to the server
3. PUT: updates or replaces a resource in the server
4. DELETE: removes or deletes a resource in the server
5. PATCH: partially updates a resource in the server

For certain request methods, the request will also contain a body of content that the client is sending.

HTTP Path: represetation of where the resource is stored on the web server.
example: https://example.com/images/image.jpg

HTTP verions: There are multiple versions of HTTP protocol. Most used versions are 1.1 and 2.0.

HTTP Headers: contains additional information about the request and the client that is making the request.

Make-up of HTTP Response:
HTTP response format is similar to the HTTP request format.
Following the header, the response will optionally contain a MESSAGE BODY consisting of the response contents such as HTML document, the image file and so on.

HTTP Status Code contained within Header indicate if the HTTP request is succesfully completed.
Code values are in the range of 100-599 and are grouped by purpose.
The STATUS MESSAGE is a text representation of the status code.

There are 5 groups of status codes:
1. Informational responses   : 100 - 199
2. Successful responses      : 200 - 299
3. Redirection responses     : 300 - 399
4. Client Error responses    : 400 - 499
5. Server Error responses    : 500 - 599

Informational Responses: (100 - 199)
provisional rsponses sent by server (interim before actual response)
Ex: 100 CONTINUE - continue the request or ignore the response if the request is already finished.

Successful responses: (200 - 299)
Request successfully processed by web server. We receive this respone everyday when we receive the content succssfully from a website
Ex: 200 OK
200 OK meaning depnd on HTTP method:
GET: the resource is found and it is included in the body of the response
POST: the resource is succssully transmitted to the web server
PUT: the resource is succssully transmitted to the web server
DELETE: the resource is deleted 

201 Created - a resource was created.
202 Accepted - accepted but processing has not completed.
204 No Content - not returning any content.

Redirection responses: (300 - 399)
Indicates to the web client that the requested resource has been moved to a different path.
Ex: 
301 MOVED PERMANENTLY :
302 FOUND             : temporary redirection, the resource is temporarily moved.
When web browsers receive these responses, they will automatically submit the request for the resource at the new path.

Client Error responses: (400 - 499)
Indicate the request contained bad syntax or content and can not be processed by the web server.
Ex:
400 Bad Request : web browser or client submitted bad data to the server.
401 Unauthorized : user must log in to an account before the request can be processed
403 Forbidden : request is valid, but the web server is refusing to process it. user does not sufficient permissions to execute an action in a web application.
404 Not Found : requested resource was not found on the web server.

Server Error responses: (500 - 599)
indicate the failure occurred on the web server, while trying to process the request.
Ex: 
500 Internal Server Error: Generic Server Error: indicates Server failed to process the request.
502 Bad Gateway: invalid response from the Application Server.
503 Service Unavailable: web server cannot process the request.

HTTPS: SECURE version of HTTP. used to secure the communication between two computers so that no body else can see the information being sent and recived. It does this by using encryption. The HTTP & HTTPS behave the same way and have the same content. The big difference is that before the content is sent, it is turned into a secret code. Only the other computers can turn the secret code back into original content. We use HTTPS everyday. Lock Icon beside the URL in web browser.

Introduction to HTML, CSS and JavaScript:
For a webpage, we need 3 files and need to be linked together for a complete function.   
- an HTML file (clock.html)
- a CSS file (style.css)
- a JavaScript file (clock.js)

Webpages, Websites and Web Apps:
Webpage: A single page that consists of HTML, CSS, and JavaScript. It displays images, text, videos and other content in the webbrowser.
Website: A collection of webpages that linked together under one domain name.
HyperLink: The link we click on webbrowser as they link HyperText content.
Website and Web application are used interchangably. Website is informative and a web application is more interactive.
Compared to website, Web Application provides:
- A high level of Interactivity
- Dynamically updated content
- Personalized content
Quiz:
1. When sending a message to another computer, the source and destination are specified using an IP ADDRESS
2. Which of the following are valid IP addresses? Select all that apply.
- 192.0.2.235 - correct
- example.com
- 4527:0db8:0a00:1567:0200:ff00:0042:8329 - correct
3. When using TCP, data can arrive out of order. - TRUE
Ans: Data sent via TCP can arrive out of order, but the protocol ensures it's reordered correctly before delivery to the application.
4. Which of the following are valid HTTP methods?
- GET - correct
- POST - correct
- SEND
- DELETE - correct
5. HTML describes the structure and content of a web page. - TRUE
6. When you type a website address (for example, coursera.org) in your web browser, which protocol is used to find the IP address of the website?
- Internet Message Access Protocol (IMAP)
- File Transfer Protocol (FTP)
- Domain Name System Protocol (DNS) - correct
7. A web application is more INTERACTIVE compared to a website.

Browser Developer Tools: allows developers to 
- inspect their HTML, CSS and JavaScript Code, 
- also to trace http request in the webserver, 
- invetigate performance issues and
- review webpage security.
When a FrontEnd is not working as expected, you can check developer tools to know what is going wrong.
To open developer tools --> 
- In chrome, press F12 in Windows or CMD+Option J in MAC.
- right click on webpage --> Inspect
Various rows in top row of developer tools that provide differernt fuctionality.
Most used Tools:
Console Tab: outputs JavaScript Logs and errors from web application.
Source Tab: shows all the content resolved for the current page. it includes HTML, CSS and JavaScript, images and videos.
Network Tab: used for inspecting timeline details of http request and responses for the webpage.
Performance Tab: shows what the webbrowser is doing over time. it is useful when your webapplication is running slow because you can pinpoint the function that is taking the most time.
Memory Tab: displays parts of our code that are consuming the most resources.
Elements Tab: Used to inpect the documents, HTML elements and their properties. When we hover over the elements in elements tab, it highlights that element in the browser pane. One the right side of the panel, there are tabs for inspecting the details of the elements further. This panel shows us what CSS is applied to an element and the result of the element displayed in the browser. When you click on an HTML element, then the information for that element will appear in the tab.
If you double click the HTML element, you can edit it in the webbrowser. But this does not change the content on web server. It only updates it for me while the webpage is open. If we open the webpage again or refresh the webpage, it will reset.
The Web browser developer tools are a valuable part of your development toolkit to help you investigate and diagnose problems.

Frameworks and Libraries:
Used to Save Time and build fast. Built problem have already been solved, many key development processes and they contained in frameworks and libraries that are used everyday in software and application devlopment. These might be open-source (available to everyone to modify and build from). They might be propritery, once that are licensed or developed internally.
Libraries are reusable pieces of code to save time. they are purpose built to provide a spcific functionality.
Frameworks provide a structure for developers to build with. Frameworks acts a struture where the developer provides their own code that framework interacts with.
Examples:
- Express
- Django
- ASP.NET
- Rails
- Spring
Frameworks handle functionality that is common to all webapplications such as receiving HTTP requests and sending HTTP responses. And then developer adds their own code that implments the functionality of the web application.
Most Frameworks use many libraries, the libraries that framework uses can be used for your application, if you wish, you can use other libraries.
Frameworks are considerd opinionated and libraries are considered unopinionated.
The opinionatedness will vary between frameworks. but by defintion, it will always be opinionated than a library. 
Frameworks define the libraries, flow and control of the application. Wheras with libraries, those are ft to the developers to decide.
Framework contains Library
Framework call your application
Your application calls library
Advantages of Frameworks:
- Timesaving, reduce development time
- enforce a STRUCTURE on how code is written
- have many best practices already in place and contain most of what is needed.
Disadvantages of Frameworks:
