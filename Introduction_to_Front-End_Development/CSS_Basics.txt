SELECTING AND STYLING
For websites and web apps, HTML is the frame and structure.
CSS tells the web browser how to display HTML elements on screen. 
When using CSS, there are five elements you need to understand. 
- A declaration block starts with a left curly bracket and ends with the matching right curly bracket. 
- In between these curly brackets are the style declarations. 
- The first element of the CSS rule is the selector. This indicates which html element or elements we want to style. 
Structure of the declaration block.
- Each declaration is made up of two parts a property and a value. 
    In this case, 
    - h1 - selector. 
    - Color - property and 
    - gray - value of the property.
Did you know that you can add additional functionality by using extensions. If you click on the extensions tab, you can install the 'live preview' extension by Microsoft. If you are running VS code locally, you can install and use this extension. Once installed, right click on your html file in the explorer panel and select live preview => show preview. When you update an html file, you immediately notice the changes in visual studio code. 

how to create a CSS file and style some html elements.

Before I start styling elements, create a simple html document named index.html. 
To demonstrate how CSS works, I will use an example created previously.
Next I create a file named style.CSS.
For my web page to use the CSS file, I need to link it to the head element of the html file. 
To link to a style sheet, you use the 'link' tag which must be assigned to attributes 'rel' and 'href'. 
The 'rel' attribute is assigned to style sheet and the 'href' attribute is assigned to the name of the style sheet file. 
In this example, it's style.CSS. I am now ready to apply CSS to the index.html file using style rules that I will write in the style.CSS file.

So now what if I want to only style a single h1 element? I can add an ID attribute to the tag h1 that I want to style. And in my CSS file, I create a rule for that ID. Let's do that now. First, I create an ID rule using the '#' symbol and then the name 'h1'. Then I define the CSS properties of that rule to change the color value to green. 

You may be wondering, why does the first CSS rule not apply to the h1 element with the ID? This is because of something called CSS precedents and specificity. This is a complex statement, but basically the browser will use the most precise selector for an html element. 
CSS has a set of hierarchy rules which dictate which rule will apply to an element. In this example, the ID rule takes precedence over the html type selector rule. You can learn more about CSS selector rules and precedents from the additional reading at the end of this lesson. 
Q. When you create a CSS rule, the part inside the curly brackets is called the: 
- Declaration block - Correct
- Selector
- Value
- Property
Ans: Everything between the curly brackets is called the declaration  block.

DIFERENT TYPES OF SELECTORS
When styling a web page, there are many types of selectors available that allow developers to be as broad or as specific as they need to be when selecting HTML elements to apply CSS rules to.

Common CSS selectors that you will use as a developer:
1. Element Selectors: allows developers to select HTML elements based on their element type
    HTML:
        <p>Once upon a time...</p>
        <p>In a hidden land...</p>
    CSS:
        p {
            color: blue ;
        }

2. ID Selectors: uses the id attribute of an HTML element. Since the id is unique within a webpage, it allows the developer to select a specific element for styling. ID selectors are prefixed with a # character.
    HTML:
        <span id="latest">New!</span>
    CSS:
        #latest {
            background-color: purple ;
        }

3. Class Selectors: Elements can also be selected based on the class attribute applied to them. The CSS rule has been applied to all elements with the specified class name. The class selector is prefixed with a "." character. In the following example, the CSS rule applies to both elements as they have the navigation CSS class applied to them.
    HTML:
        <a class="navigation">Go Back</a>
        <p class="navigation">Go Forward</p>
    CSS:
        .navigation {
            margin: 2px ;
        }

4. Element with Class Selector: A more specific method for selecting HTML elements is by first selecting the HTML element, then selecting the CSS class or ID. The example below selects all p elements that have the CSS class introduction applied to them.
    HTML:
        <p class="introduction"></p>
    CSS:
        p.introduction {
            margin: 3px ;
        }

5. Descendant Selectors: useful if you need to select HTML elements that are contained within another selector.
    HTML:
        <div id="blog">
            <h1>Latest News</h1>
            <div>
                <h1>Today's Weather</h1>
                <p>The weather will be sunny</p>
            </div>
            <p>Subscribe for more news</p>
        </div>
        <div>
            <h1>Archives</h1>
        </div>
    CSS:
        #blog h1 {
            color : blue ;
        }
    The CSS rule will select all h1 elements that are contained within the element with the ID blog. 
    The CSS rule will not apply to the h1 element containing the text Archives.
    The structure of a descendant selector is a CSS selector, followed by a single space character, followed by another CSS selector.
    Multiple descendants can also be selected. 
    For example, to select all h1 elements that are descendants of div elements which are descendants of the blog element, the selector is specified as follows.
    CSS:
        #blog div h1 {
            color : blue ;
        }

6. Child Selectors: more specific than descendant selectors. They only select elements that are immediate descendants (children) of a selector (the parent).
    HTML:
        <div id="blog">
            <h1>Latest News</h1>
            <div>
                <h1>Today's Weather</h1>
                <p>The weather will be sunny</p>
            </div>
            <p>Subscribe for more news</p>
        </div>
    If you wanted to style the h1 element containing the text Latest News, you can use the following child selector:
    CSS:
        #blog > h1 {
            color : blue ;
        }
This will select the element with the ID blog (the parent), then it will select all h1 elements that are contained directly in that element (the children). 
The structure of the child selector is a CSS selector followed by the child combinator symbol > followed by another CSS selector.
Note that this will not go beyond a single depth level. 
Therefore, the CSS rule will not be applied to the h1 element containing the text Today's Weather.

8. :hover Pseudo-Class
A special keyword called a pseudo-class allows developers to select elements based on their state. 
Don't worry too much about what that means right now. 
For now, let's look at how the hover pseudo-class allows you to style an element when the mouse cursor hovers over the element.
The simplest example of this is changing the color of a hyperlink when it is hovered over. 
To do this, you add the :hover pseudo-class to the end of the selector. 
In the following example, adding :hover  to the a element will change the color of the hyperlink to orange when it is hovered over.
    CSS:
        a:hover {
            color : orange ;
        }
This pseudo-class is very useful for creating visual effects based on user interaction.

TEXT AND COLOR IN CSS
BOX MODEL INTRODUCTION
DOCUMENT FLOW BLOCK VS LINE
ALIGNMENT BASICS
STYLING A PAGE
ADDITIONAL RESOURCES
