SELECTING AND STYLING
For websites and web apps, HTML is the frame and structure.
CSS tells the web browser how to display HTML elements on screen. 
When using CSS, there are five elements you need to understand. 
- A declaration block starts with a left curly bracket and ends with the matching right curly bracket. 
- In between these curly brackets are the style declarations. 
- The first element of the CSS rule is the selector. This indicates which html element or elements we want to style. 
Structure of the declaration block.
- Each declaration is made up of two parts a property and a value. 
    In this case, 
    - h1 - selector. 
    - Color - property and 
    - gray - value of the property.
Did you know that you can add additional functionality by using extensions. If you click on the extensions tab, you can install the 'live preview' extension by Microsoft. If you are running VS code locally, you can install and use this extension. Once installed, right click on your html file in the explorer panel and select live preview => show preview. When you update an html file, you immediately notice the changes in visual studio code. 

how to create a CSS file and style some html elements.

Before I start styling elements, create a simple html document named index.html. 
To demonstrate how CSS works, I will use an example created previously.
Next I create a file named style.CSS.
For my web page to use the CSS file, I need to link it to the head element of the html file. 
To link to a style sheet, you use the 'link' tag which must be assigned to attributes 'rel' and 'href'. 
The 'rel' attribute is assigned to style sheet and the 'href' attribute is assigned to the name of the style sheet file. 
In this example, it's style.CSS. I am now ready to apply CSS to the index.html file using style rules that I will write in the style.CSS file.

So now what if I want to only style a single h1 element? I can add an ID attribute to the tag h1 that I want to style. And in my CSS file, I create a rule for that ID. Let's do that now. First, I create an ID rule using the '#' symbol and then the name 'h1'. Then I define the CSS properties of that rule to change the color value to green. 

You may be wondering, why does the first CSS rule not apply to the h1 element with the ID? This is because of something called CSS precedents and specificity. This is a complex statement, but basically the browser will use the most precise selector for an html element. 
CSS has a set of hierarchy rules which dictate which rule will apply to an element. In this example, the ID rule takes precedence over the html type selector rule. You can learn more about CSS selector rules and precedents from the additional reading at the end of this lesson. 
Q. When you create a CSS rule, the part inside the curly brackets is called the: 
- Declaration block - Correct
- Selector
- Value
- Property
Ans: Everything between the curly brackets is called the declaration  block.

DIFERENT TYPES OF SELECTORS
When styling a web page, there are many types of selectors available that allow developers to be as broad or as specific as they need to be when selecting HTML elements to apply CSS rules to.

Common CSS selectors that you will use as a developer:
1. Element Selectors: allows developers to select HTML elements based on their element type
    HTML:
        <p>Once upon a time...</p>
        <p>In a hidden land...</p>
    CSS:
        p {
            color: blue ;
        }

2. ID Selectors: uses the id attribute of an HTML element. Since the id is unique within a webpage, it allows the developer to select a specific element for styling. ID selectors are prefixed with a # character.
    HTML:
        <span id="latest">New!</span>
    CSS:
        #latest {
            background-color: purple ;
        }

3. Class Selectors: Elements can also be selected based on the class attribute applied to them. The CSS rule has been applied to all elements with the specified class name. The class selector is prefixed with a "." character. In the following example, the CSS rule applies to both elements as they have the navigation CSS class applied to them.
    HTML:
        <a class="navigation">Go Back</a>
        <p class="navigation">Go Forward</p>
    CSS:
        .navigation {
            margin: 2px ;
        }

4. Element with Class Selector: A more specific method for selecting HTML elements is by first selecting the HTML element, then selecting the CSS class or ID. The example below selects all p elements that have the CSS class introduction applied to them.
    HTML:
        <p class="introduction"></p>
    CSS:
        p.introduction {
            margin: 3px ;
        }

5. Descendant Selectors: useful if you need to select HTML elements that are contained within another selector.
    HTML:
        <div id="blog">
            <h1>Latest News</h1>
            <div>
                <h1>Today's Weather</h1>
                <p>The weather will be sunny</p>
            </div>
            <p>Subscribe for more news</p>
        </div>
        <div>
            <h1>Archives</h1>
        </div>
    CSS:
        #blog h1 {
            color : blue ;
        }
    The CSS rule will select all h1 elements that are contained within the element with the ID blog. 
    The CSS rule will not apply to the h1 element containing the text Archives.
    The structure of a descendant selector is a CSS selector, followed by a single space character, followed by another CSS selector.
    Multiple descendants can also be selected. 
    For example, to select all h1 elements that are descendants of div elements which are descendants of the blog element, the selector is specified as follows.
    CSS:
        #blog div h1 {
            color : blue ;
        }

6. Child Selectors: more specific than descendant selectors. They only select elements that are immediate descendants (children) of a selector (the parent).
    HTML:
        <div id="blog">
            <h1>Latest News</h1>
            <div>
                <h1>Today's Weather</h1>
                <p>The weather will be sunny</p>
            </div>
            <p>Subscribe for more news</p>
        </div>
    If you wanted to style the h1 element containing the text Latest News, you can use the following child selector:
    CSS:
        #blog > h1 {
            color : blue ;
        }
This will select the element with the ID blog (the parent), then it will select all h1 elements that are contained directly in that element (the children). 
The structure of the child selector is a CSS selector followed by the child combinator symbol > followed by another CSS selector.
Note that this will not go beyond a single depth level. 
Therefore, the CSS rule will not be applied to the h1 element containing the text Today's Weather.

8. :hover Pseudo-Class
A special keyword called a pseudo-class allows developers to select elements based on their state. 
Don't worry too much about what that means right now. 
For now, let's look at how the hover pseudo-class allows you to style an element when the mouse cursor hovers over the element.
The simplest example of this is changing the color of a hyperlink when it is hovered over. 
To do this, you add the :hover pseudo-class to the end of the selector. 
In the following example, adding :hover  to the a element will change the color of the hyperlink to orange when it is hovered over.
    CSS:
        a:hover {
            color : orange ;
        }
This pseudo-class is very useful for creating visual effects based on user interaction.

TEXT AND COLOR IN CSS
As you design websites, you'll be working a lot with colors and text. There are many different ways to display text and equally as many ways to define colors.
Color: used in many CSS properties.
CSS:
    p{
        color : blue ;
    }

From CSS Version 3, there are 5 main ways to reference a color.
1. By RGB value,
2. By RGBA value,
3. By HSL value,
4. By hex value and
5. By predefined color names.

1. RGB value:
- RGB is a color model that adds the colors red (R), green (G) and blue (B) together to create colors. 
- This is based on how the human eye sees colors.
- Each value is defined as a number between 0 and 255, representing the intensity of that color.
- RGB value of color Red is 255,0,0  - since the intensity of the red color would be 100% while blue and green would be 0%.
- RGB value of color black is 0,0,0  
- RGB value of color white is 255,255,255
- When using RGB values in CSS, they can be defined using the 'rgb' keyword
CSS:
    p {
        color : rgb(255, 0, 0) ;
    }

2. RGBA value
- RGBA is an extension of RGB that add an alpha (A) channel. 
- The alpha channel represents the opacity, or transparency, of the color. 
- Similar to RGB, this is specified in CSS using the 'rgba' keyword
CSS:
    p {
        color : rgba(255, 0, 0, 0.8) ;
    }

3. HSL value:
- HSL is a newer color model defined as Hue (H), Saturation (S) and Lightness (L). 
- The aim of the model is to simplify mental visualization of the color that the value represents.
- Think of a rainbow that has been turned into a full circle. This represents the Hue. The Hue value is the degree value on this circle, from 0 degrees to 360 degrees. 0 is red, 120 is green and 240 is blue.
- Saturation is the distance from the center of the circle to its edge. The saturation value is represented by a percentage from 0% to 100% where 0% is the center of the circle and 100% is its edge. For example, 0% will mean that the color is more grey and 100% represents the full color.
- Lightness is the third element of this color model. Think of it as turning the circle into a 3D cylinder where the bottom of the cylinder is more black and toward the top is more white. Therefore, lightness is the distance from the bottom of the cylinder to the top. Again, lightness is represented by a percentage from 0% to 100% where 0% is the bottom of the cylinder and 100% is its top. In other words, 0% will mean that the color is more black and 100% is white.
- In CSS, you use the 'hsl' keyword to define a color with HSL.
CSS:
    p {
        color : hsl(0, 100%, 50%) ;
    }

4. Hex value
- Colors can be specified using a hexadecimal value. 
- If you're unfamiliar with hexadecimal, think of it as a different number set. Decimal is what you use every day. Digits range from 0 to 9 before tens and hundreds are used. Hexadecimal is similar, except it has 16 digits. This is counted as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.
- In fact, you can convert between decimal and hexadecimal. Decimal 10 is equal to hexadecimal A. Hexadecimal F is equal to decimal 15. Hexadecimal can also go to tens and hundreds. For example, decimal 16 is equal to hexadecimal 10, with 10 being the next number after F. It can be a little confusing at first but don't worry, there are plenty of converters available if you get stuck.
- Colors specified using hexadecimal are prefixed with a '#' symbol followed by the RGB value in hexadecimal format.
- For example, the color red which is RGB 255,0,0 would be written as hexadecimal #FF0000. Again don't worry if you get stuck, there are plenty of converters available for this too!

5. Predefined color names
- Modern web browsers support 140 predefined color names. 
- These color names are for convenience purposes and can be mapped to equivalent hex/RGB/HSL values.
- Some common color names available are listed below.
black
silver
gray
white
maroon
red
purple
fuchsia
green
lime
olive
yellow
navy
blue
teal
aqua

Text: With CSS there are many ways to change how text is displayed. 
most common text manipulation CSS properties.

1. Text Color: The color property sets the color of text. 
CSS:
    p {
        color : hsl(0, 100%, 50%) ;
    }

2. (A) Text Font: 
- There are many different fonts to display text on your computer. 
- In simple terms, a font is a collection of text characters written in a specific style and size.
- If you've used a word processor before, you're probably familiar with the fonts Times New Roman and Calibri.
- To set the font used by text in CSS you use the 'font-family' property.
CSS:
    p {
        font-family : "Courier New", monospace ;
    }

- Since computers vary in what fonts they have installed, it is recommended to include several fonts when using the font-family property. 
- These are specified in a fallback order, meaning that if the first font is not available, it will check for the second font. 
- If the second font is not available, then it will check for the third font and so on. 
- If none of the fonts are available, it will use the browser's default font.

2. (B) Text Size:
To set the size of the font, the 'font-size' property is used.
CSS:
    p {
        font-family : "Courier New", monospace ;
        font-size : 12px ;
    }

3. Text Transformation:
- Text transformation is useful if you want to ensure the correct capitalization of the text content. 
- In the example below, the CSS rule will change all text in paragraph elements to uppercase using the 'text-transform' property:
CSS:
    p {
        text-transform : uppercase ;
    }
- The most commonly used values for the text-transform property are:  
    - uppercase,  
    - lowercase,  
    - capitalize  and 
    - none. 
- The default value used is none, which means the text displays as it was written in the HTML document.

4. Text Decoration
- The text-decoration property is useful to apply additional decoration to text such as underlining and line-through (strikethrough).
CSS:
    p {
        text-decoration: underline ;
    }
- It is possible to set the color, thickness and styling of the decoration too. 
- In the example below, the underline will be a solid red line that is 5 pixels thick.
CSS:
    p {
        text-decoration: underline red solid 5px ;
    }
- If this is confusing, These properties can be individually set using 
    - the text-decoration-line, 
    - text-decoration-color, 
    - text-decoration-style and 
    - text-decoration-thickness properties. 
Let's use the same example again and define it using the individual properties:
CSS:
    p { 
      text-decoration-line: underline;
      text-decoration-color: red;
      text-decoration-style: solid;
      text-decoration-thickness: 5px;
    }

- The most common 'text-decoration-line' values used are: 
    - underline, 
    - overline, 
    - line-through and     
    - none. 
- None is the default value to use no text decoration.
- There are many styles available for the 'text-decoration-style'  property;  
    - solid,  
    - double,  
    - dotted,  
    - dashed  and  
    - wavy. 
- The 'text-decoration-style' property requires the decoration line to be defined. 
- If the decoration style is not specified, 'solid' will be used.

BOX MODEL INTRODUCTION
DOCUMENT FLOW BLOCK VS LINE
ALIGNMENT BASICS
STYLING A PAGE
ADDITIONAL RESOURCES
