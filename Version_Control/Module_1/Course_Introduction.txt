As a programmer, you'll be working with many files in your project and it's important to keep track of the changes being made. 

Version control: 
It is a system that records all changes and modifications to files for tracking purposes, and is essential to your day-to-day development activities. 

In this course, you will become familiar with version control and how it relates to development. 
By the end of your studies, you'll understand:
- what is version control ?
- how version control works ? and
- how version control is used ?

There are both 
1. centralized and 
2. distributed control systems available and 

you'll examine the different types of workflows available. 

Conflict resolution is an important aspect of version control as it helps users manage file and version conflict issues. 

You'll get to explore:
- popular methods of version tracking using version control technologies like Git and GitHub. and
- how to create and clone a repository in GitHub. 
- Git concepts such as add, commit, push and pull, branching and forking, diff and blame. 

As well as focusing on version control, the course also explores 
- the use of command-line syntax with an emphasis on Unix commands. 

In summary, this course provides you with a complete introduction to version control and it is part of a program of courses that lead you towards a career in software development.



Course syllabus:

Version Control
In this course, you will learn about how modern software developers collaborate across the world without messing up each other's code. 
You will look at the different version control systems and how to create an effective software development workflow. 
You will be introduced to some of the most commonly used Linux commands that you can use to work with files on your hard drive and create powerful workflows that will automate your work, saving you time and effort. 
Finally, you will see how Git can be used in software development projects to manage team files, you will create a repository that can manage code revisions.

After completing this course, you will be able to:
- Implement Version Control systems.
- Navigate and configure using the command line.
- Manage code revisions.
- Create and use a GitHub repository.

The modules and resources that you will work through and explore in this course will help you to prepare for the Exam: 

Below is an outline of the modules that will be covered in this course:

Module 1: Software Collaboration
In this module, you will learn about using version control or subversion to bring order to the chaos of massive software projects that have the potential for mistakes and bugs. 
You will look at the different version control systems and how to create an effective software development workflow.
After completing this module, you will be able to: 
- Describe how modern software teams collaborate and work on the same codebase.
- List different version control systems and methodologies. 
- Illustrate a standard software development workflow.

Module 2: Command Line
In this module, you will learn how to use the command line to execute commands in Linux. You will be introduced to some of the most commonly used commands that traverse, create, rename, and delete files on your hard drive. You will learn how easy it is to use piping and redirection to create powerful workflows that will automate your work, saving you time and effort.
After completing this module, you will be able to: 
- Describe how the command line is and how it is used.
- Practice traversing your hard drive via the command line.
- Create, rename and delete files and folders on your hard drive using Unix commands.
- Use pipes and redirection.

Module 3: Git
This module will help you to develop a strong conceptual understanding of the Git technology and how it is used in software development projects to manage team files. You will install Git, create a local repository, create a commit, create a remote repository and push commits to a remote repository. 
After completing this module, you will be able to: 
- Outline the Git principles.
- Use a GitHub repository.
- Describe the steps in a standard GitHub workflow.
- Create branches and merge different branches and sources.
- Describe how code goes from local development to version control and then to live production.

Module 4: Graded Assessment
In the final module, you'll learn about the graded assessment. After you complete the individual units in this module, you'll synthesize the skills you gained from the course to manage a project on GitHub.
You'll also have the opportunity to reflect on the course content and the learning path that lies ahead.   
After completing this module, you will be able to: 
- Recap on all of the topics covered throughout the course.
- Apply all the skills you have learned in a graded project.

Practical Exercises:
We encourage you to complete the practical exercises in this course. 
By completing these exercises you will have a more practical understanding of how to explore Version Control.
